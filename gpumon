#!/bin/bash 
DMIDECODE=$(dmidecode -t 9 | grep -oP '(Type|Designation|Bus\sAddress|Current Usage).*' |  awk '{ print "\""$0"\"," }'| xargs -n4)
DESREGEX="^Designation"
BUSREGEX="^Bus Address"
USEREGEX="^Current Usage"
TYPEREGEX="^Type"
SLOTREGEX="PXE|PEX"

PCI_REGEX='/\(VGA compatible\|3D controller\).*\(AMD\|\NVIDIA\)/s/^\(..\):\(..\).\(.\).*/\0|0x\1:0x\2:0x\3/p'

function main {
    parse_args "$@"
    exit 0
}

function usage
{
    echo "Usage: gpumon [-h|--help] [OPTIONS]"
    echo " -h | --help      : this message"
    echo ""
    echo " OPTIONS"
    echo "  -pci            : monitor by pci (default)"
    echo "  -gpu            : monitor by gpu" 
    echo "  -csv            : output as csv"
    echo "  -sortbus        : sort by bus"
    exit 0
}

function parse_args
{
    local _ARGS=()
    local _BYPCI=1
    local _BYGPU=""
    local _CSV=""
    local _SORTBUS=""

    while [ "$1" ]
    do
        case "$1" in
            "-h" | "--help")
                usage
                exit 0
                ;;
            "-gpu")
                _BYGPU=1
                ;;        
            "-pci")
                _BYPCI=1
                ;;
            "-csv")
                _CSV=1
                ;;
            "-sortbus")
                _SORTBUS=1
                ;;
        esac
        shift
    done
    
    set -- "${args[@]}"

    gpumon "${_BYGPU}" "${_BYPCI}" "${_CSV}" "${_SORTBUS}"
    exit 0
}

function parse_pciid
{
    local _PCIID=$1
    local _TYPE=$2
    local _PCIID_ARRAY=(${_PCIID//:/ })
    local _RESULT="${_PCIID}"

    case "${_TYPE}" in
        "xorg" )
            _RESULT=$(printf "PCI:%d:%d:%d" "${_PCIID_ARRAY[@]}")
            ;;
        "lspci" )
            _RESULT=$(printf "%02x:%02x.%0x" "${_PCIID_ARRAY[@]}")
            ;; 
        "rocm" )
            _RESULT=$(printf "0000:%02x:%02x.%0x" "${_PCIID_ARRAY[@]}")
            _RESULT=$(find /sys/class/drm/card*/device/uevent -type f -print | xargs grep "${_RESULT}" | grep -o 'card\([0-9a-f]*\)' | sed -e 's/card//')
            ;;
    esac
    echo "${_RESULT}"
}

function amd_get_power
{
    local _CARDNUMBER=$1
    echo $(cat "/sys/kernel/debug/dri/${_CARDNUMBER}/amdgpu_pm_info" | grep 'average GPU' | cut -d 'W' -f 1 | xargs)
}

function amd_get_temp
{
    local _CARDNUMBER=$1
    if [[ "${_CARDNUMBER}" -eq "0" ]];then
        local _HWMON=$(( _CARDNUMBER + 1 ))
        local _TEMP=$(cat "/sys/class/drm/card${_CARDNUMBER}/device/hwmon/hwmon${_HWMON}/temp1_input")
    else
        local _TEMP=$(cat "/sys/class/drm/card${_CARDNUMBER}/device/hwmon/hwmon${_CARDNUMBER}/temp1_input")
    fi
    _TEMP=$(bc -l <<< "${_TEMP}"/1000)
    echo "${_TEMP}"
}

function amd_get_sclk
{
    local _CARDNUMBER=$1
    SCLK=$(</sys/class/drm/card${_CARDNUMBER}/device/pp_dpm_sclk)
    echo $(echo "${SCLK}"  | grep "*" | cut -d " " -f2)
}

function amd_get_mclk
{
    local _CARDNUMBER=$1
    MCLK=$(</sys/class/drm/card${_CARDNUMBER}/device/pp_dpm_mclk)
    echo $(echo "${MCLK}"  | grep "*" | cut -d " " -f2)
}

function gpumon 
{
    BYGPU=$1
    BYPCI=$2
    CSV=$3
    SORTBUS=$4

    DMILIST=()
    while read -r INFOS; do
        IFS=',' read -r -a INFOARR <<< "$INFOS"
        for INFO in "${INFOARR[@]}"; do
            INFO=$(echo "${INFO}" | xargs )
            if [[ $INFO =~ $DESREGEX ]]; then
                DESIGNATION=$(cut -d ":" -f 2 <<< $INFO | xargs)
            elif [[ $INFO =~ $USEREGEX ]]; then
                USAGE=$(cut -d ":" -f 2 <<< $INFO | xargs)
            elif [[ $INFO =~ $TYPEREGEX ]]; then
                TYPE=$(cut -d ":" -f 2 <<< $INFO | xargs)
            elif [[ $INFO =~ $BUSREGEX ]]; then
                BUSADDRESS=$(cut -d ":" -f 3- <<< $INFO | xargs)
            fi
        done
        DMILIST+=( "$BUSADDRESS,$DESIGNATION,$USAGE,$TYPE" )
    done <<< "${DMIDECODE}"

    LC_NUMERIC="en_US.UTF-8"

    PCIIDS=$(lspci | sed -n -e "${PCI_REGEX}")
    
    if [ ! -z "${BYPCI}" ]; then
        if [ ! -z "${SORTBUS}" ]; then
            IFS=$'\n' DMILIST=($(sort <<<"${DMILIST[*]}"))
            unset IFS
        fi
        bypci "${PCIIDS}" "${DMILIST}" "${CSV}"
    fi
    
    if [ ! -z "${BYGPU}" ]; then
        bygpu "${PCIIDS}" "${DMILIST}" "${CSV}"
    fi
}

function bygpu {
    PCIIDS=$1
    DMILIST=$2
    CSV=$3

    if [ -z "${CSV}" ]; then
        printf "%-3s %-7s %-10s %-7s %-3s %-6s %-6s %-8s %-8s\n" "IDX" "PCI" "TYPE" "BUS" "GPU" "PWR" "TEMP" "SCLK" "MCLK"
    fi

    INDEX=0
    while read -r PCIID; do
        if [ -z "${PCIID}" ]; then
            continue
        fi

        PCINUMBER=""
        PCITYPE=""

        IFS='|' read -r -a PCIIDARR <<< "$PCIID"
        PCITOSEARCH=$(parse_pciid "${PCIIDARR[1]}" "lspci")
        CARD=$(parse_pciid "${PCIIDARR[1]}" "rocm")
        for DMI in "${DMILIST[@]}"; do
            IFS=',' read -r -a DMIARR <<< "$DMI"
            if [ "${DMIARR[0]}" == "${PCITOSEARCH}" ]; then
                PCINUMBER=${DMIARR[1]}
                PCITYPE=${DMIARR[3]}
                break
            fi
        done
        
        POWER=$(printf "%4.1f" $(amd_get_power "${CARD}"))
        TEMP=$(printf "%2.1f" $(amd_get_temp "${CARD}" ))
        SCLK=$(amd_get_sclk "${CARD}")
        MCLK=$(amd_get_mclk "${CARD}")
        if [ -z "${CSV}" ]; then
            printf "%3s %7s %10s %7s %3s %5sW %5sC %7s %8s\n" "${INDEX}" "${PCINUMBER}" "${PCITYPE:0:10}" "${PCITOSEARCH}" "${CARD}" "${POWER}" "${TEMP}" "${SCLK}" "${MCLK}"
        else
            printf "%s,%s,%s,%s,%s,%s,%s,%s,%s\n" "${INDEX}" "${PCINUMBER}" "${PCITYPE}" "${PCITOSEARCH}" "${CARD}" "${POWER}" "${TEMP}" "${SCLK}" "${MCLK}"
        fi
        INDEX=$((INDEX+1))
    done <<< "${PCIIDS}"
}

function bypci {
    PCIIDS=$1
    DMILIST=$2
    CSV=$3

    if [ -z "${CSV}" ]; then
        printf "%-3s %-7s %-10s %-7s %-3s %-6s %-6s %-8s %-8s\n" "IDX" "PCI" "TYPE" "BUS" "GPU" "PWR" "TEMP" "SCLK" "MCLK"
    fi
    INDEX=0
    for DMI in "${DMILIST[@]}"; do
        IFS=',' read -r -a DMIBUS <<< "$DMI"
        CARD=""
        if [[ ! ${DMIBUS[1]} =~ $SLOTREGEX ]]; then
            continue
        fi

        while read -r PCIID; do
            IFS='|' read -r -a PCIIDARR <<< "$PCIID"
            PCITOSEARCH=$(parse_pciid "${PCIIDARR[1]}" "lspci")
            if [ "${DMIBUS[0]}" == "${PCITOSEARCH}" ]; then
                CARD=$(parse_pciid "${PCIIDARR[1]}" "rocm")
                break
            fi
        done <<< "${PCIIDS}"
        if [ ! -z "${CARD}" ]; then
            POWER=$(printf "%4.1f" $(amd_get_power "${CARD}"))
            TEMP=$(printf "%2.1f" $(amd_get_temp "${CARD}" ))
            SCLK=$(amd_get_sclk "${CARD}")
            MCLK=$(amd_get_mclk "${CARD}")
            if [ -z "${CSV}" ]; then
                printf "%3s %7s %10s %7s %3s %5sW %5sC %7s %8s\n" "${INDEX}" "${DMIBUS[1]}" "${DMIBUS[3]:0:10}" "${DMIBUS[0]}" "${CARD}" "${POWER}" "${TEMP}" "${SCLK}" "${MCLK}"
            else
                printf "%s,%s,%s,%s,%s,%s,%s,%s,%s\n" "${INDEX}" "${DMIBUS[1]}" "${DMIBUS[3]:0:10}" "${DMIBUS[0]}" "${CARD}" "${POWER}" "${TEMP}" "${SCLK}" "${MCLK}"
            fi
        else
            if [ -z "${CSV}" ]; then
                printf "%3s %7s %10s %7s %3s %5sW %5sC %7s %8s\n" "${INDEX}" "${DMIBUS[1]}" "${DMIBUS[3]:0:10}" "${DMIBUS[0]}" "-" "-" "-" "-" "-"
            else
                printf "%s,%s,%s,%s,%s,%s,%s,%s,%s\n" "${INDEX}" "${DMIBUS[1]}" "${DMIBUS[3]}" "${DMIBUS[0]}" "-" "-" "-" "-" "-"
            fi
        fi
        INDEX=$((INDEX+1))
    done <<< "${DMILIST}"
}

if (($EUID != 0)); then
  if [[ -t 1 ]]; then
    sudo "$0" "$@"
  else
    exec 1>output_file
    gksu "$0 $@"
  fi
  exit 1
fi

main "$@"
